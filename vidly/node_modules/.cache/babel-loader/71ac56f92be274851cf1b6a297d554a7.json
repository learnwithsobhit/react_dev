{"ast":null,"code":"import _defineProperty from \"/home/shobhit/react_dev/Section 9- Authentication and Authorization/Section 9- Authentication and Authorization/finish/vidly/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shobhit/react_dev/Section 9- Authentication and Authorization/Section 9- Authentication and Authorization/finish/vidly/src/components/registerForm.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\",\n        name: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      username: Joi.string().required().email().label(\"Username\"),\n      password: Joi.string().required().min(5).label(\"Password\"),\n      name: Joi.string().required().label(\"Name\")\n    };\n\n    this.doSubmit = async () => {\n      try {\n        const response = await userService.register(this.state.data);\n        auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n        window.location = \"/\";\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = _objectSpread({}, this.state.errors);\n\n          errors.username = ex.response.data;\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.renderInput(\"username\", \"Username\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderInput(\"name\", \"Name\"), this.renderButton(\"Register\")));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/shobhit/react_dev/Section 9- Authentication and Authorization/Section 9- Authentication and Authorization/finish/vidly/src/components/registerForm.jsx"],"names":["React","Joi","Form","userService","auth","RegisterForm","state","data","username","password","name","errors","schema","string","required","email","label","min","doSubmit","response","register","loginWithJwt","headers","window","location","ex","status","setState","render","handleSubmit","renderInput","renderButton"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,KAAKC,WAAZ,MAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;AAEA,MAAMC,YAAN,SAA2BH,IAA3B,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE,EAA1B;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADsB;AAAA,SAM9BC,MAN8B,GAMrB;AACPJ,MAAAA,QAAQ,EAAEP,GAAG,CAACY,MAAJ,GACPC,QADO,GAEPC,KAFO,GAGPC,KAHO,CAGD,UAHC,CADH;AAKPP,MAAAA,QAAQ,EAAER,GAAG,CAACY,MAAJ,GACPC,QADO,GAEPG,GAFO,CAEH,CAFG,EAGPD,KAHO,CAGD,UAHC,CALH;AASPN,MAAAA,IAAI,EAAET,GAAG,CAACY,MAAJ,GACHC,QADG,GAEHE,KAFG,CAEG,MAFH;AATC,KANqB;;AAAA,SAoB9BE,QApB8B,GAoBnB,YAAY;AACrB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAACiB,QAAZ,CAAqB,KAAKd,KAAL,CAAWC,IAAhC,CAAvB;AACAH,QAAAA,IAAI,CAACiB,YAAL,CAAkBF,QAAQ,CAACG,OAAT,CAAiB,cAAjB,CAAlB;AACAC,QAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACD,OAJD,CAIE,OAAOC,EAAP,EAAW;AACX,YAAIA,EAAE,CAACN,QAAH,IAAeM,EAAE,CAACN,QAAH,CAAYO,MAAZ,KAAuB,GAA1C,EAA+C;AAC7C,gBAAMf,MAAM,qBAAQ,KAAKL,KAAL,CAAWK,MAAnB,CAAZ;;AACAA,UAAAA,MAAM,CAACH,QAAP,GAAkBiB,EAAE,CAACN,QAAH,CAAYZ,IAA9B;AACA,eAAKoB,QAAL,CAAc;AAAEhB,YAAAA;AAAF,WAAd;AACD;AACF;AACF,KAhC6B;AAAA;;AAkC9BiB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,CADH,EAEG,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,UAAzC,CAFH,EAGG,KAAKA,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAHH,EAIG,KAAKC,YAAL,CAAkB,UAAlB,CAJH,CAFF,CADF;AAWD;;AA9C6B;;AAiDhC,eAAe1B,YAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .email()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}
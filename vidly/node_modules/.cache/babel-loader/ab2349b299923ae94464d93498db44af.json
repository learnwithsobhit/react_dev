{"ast":null,"code":"var _jsxFileName = \"/home/shobhit/react_dev/Section 9- Authentication and Authorization/Section 9- Authentication and Authorization/finish/vidly/src/components/movieForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass MovieForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: \"\",\n        genreId: \"\",\n        numberInStock: \"\",\n        dailyRentalRate: \"\"\n      },\n      genres: [],\n      errors: {}\n    };\n    this.schema = {\n      _id: Joi.string(),\n      title: Joi.string().required().label(\"Title\"),\n      genreId: Joi.string().required().label(\"Genre\"),\n      numberInStock: Joi.number().required().min(0).max(100).label(\"Number in Stock\"),\n      dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Daily Rental Rate\")\n    };\n\n    this.doSubmit = async () => {\n      await saveMovie(this.state.data);\n      this.props.history.push(\"/movies\");\n    };\n  }\n\n  async populateGenres() {\n    const _ref = await getGenres(),\n          genres = _ref.data;\n\n    this.setState({\n      genres\n    });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const _ref2 = await getMovie(movieId),\n            movie = _ref2.data;\n\n      this.setState({\n        data: this.mapToViewModel(movie)\n      });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Movie Form\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.renderInput(\"title\", \"Title\"), this.renderSelect(\"genreId\", \"Genre\", this.state.genres), this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\"), this.renderInput(\"dailyRentalRate\", \"Rate\"), this.renderButton(\"Save\")));\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["/home/shobhit/react_dev/Section 9- Authentication and Authorization/Section 9- Authentication and Authorization/finish/vidly/src/components/movieForm.jsx"],"names":["React","Joi","Form","getMovie","saveMovie","getGenres","MovieForm","state","data","title","genreId","numberInStock","dailyRentalRate","genres","errors","schema","_id","string","required","label","number","min","max","doSubmit","props","history","push","populateGenres","setState","populateMovie","movieId","match","params","id","movie","mapToViewModel","ex","response","status","replace","componentDidMount","genre","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,0BAApC;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,MAAMC,SAAN,SAAwBJ,IAAxB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,EADH;AAEJC,QAAAA,OAAO,EAAE,EAFL;AAGJC,QAAAA,aAAa,EAAE,EAHX;AAIJC,QAAAA,eAAe,EAAE;AAJb,OADA;AAONC,MAAAA,MAAM,EAAE,EAPF;AAQNC,MAAAA,MAAM,EAAE;AARF,KADmB;AAAA,SAY3BC,MAZ2B,GAYlB;AACPC,MAAAA,GAAG,EAAEf,GAAG,CAACgB,MAAJ,EADE;AAEPR,MAAAA,KAAK,EAAER,GAAG,CAACgB,MAAJ,GACJC,QADI,GAEJC,KAFI,CAEE,OAFF,CAFA;AAKPT,MAAAA,OAAO,EAAET,GAAG,CAACgB,MAAJ,GACNC,QADM,GAENC,KAFM,CAEA,OAFA,CALF;AAQPR,MAAAA,aAAa,EAAEV,GAAG,CAACmB,MAAJ,GACZF,QADY,GAEZG,GAFY,CAER,CAFQ,EAGZC,GAHY,CAGR,GAHQ,EAIZH,KAJY,CAIN,iBAJM,CARR;AAaPP,MAAAA,eAAe,EAAEX,GAAG,CAACmB,MAAJ,GACdF,QADc,GAEdG,GAFc,CAEV,CAFU,EAGdC,GAHc,CAGV,EAHU,EAIdH,KAJc,CAIR,mBAJQ;AAbV,KAZkB;;AAAA,SAiE3BI,QAjE2B,GAiEhB,YAAY;AACrB,YAAMnB,SAAS,CAAC,KAAKG,KAAL,CAAWC,IAAZ,CAAf;AAEA,WAAKgB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KArE0B;AAAA;;AAgC3B,QAAMC,cAAN,GAAuB;AAAA,iBACI,MAAMtB,SAAS,EADnB;AAAA,UACPQ,MADO,QACbL,IADa;;AAErB,SAAKoB,QAAL,CAAc;AAAEf,MAAAA;AAAF,KAAd;AACD;;AAED,QAAMgB,aAAN,GAAsB;AACpB,QAAI;AACF,YAAMC,OAAO,GAAG,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxC;AACA,UAAIH,OAAO,KAAK,KAAhB,EAAuB;;AAFrB,oBAIsB,MAAM3B,QAAQ,CAAC2B,OAAD,CAJpC;AAAA,YAIYI,KAJZ,SAIM1B,IAJN;;AAKF,WAAKoB,QAAL,CAAc;AAAEpB,QAAAA,IAAI,EAAE,KAAK2B,cAAL,CAAoBD,KAApB;AAAR,OAAd;AACD,KAND,CAME,OAAOE,EAAP,EAAW;AACX,UAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EACE,KAAKd,KAAL,CAAWC,OAAX,CAAmBc,OAAnB,CAA2B,YAA3B;AACH;AACF;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAM,KAAKb,cAAL,EAAN;AACA,UAAM,KAAKE,aAAL,EAAN;AACD;;AAEDM,EAAAA,cAAc,CAACD,KAAD,EAAQ;AACpB,WAAO;AACLlB,MAAAA,GAAG,EAAEkB,KAAK,CAAClB,GADN;AAELP,MAAAA,KAAK,EAAEyB,KAAK,CAACzB,KAFR;AAGLC,MAAAA,OAAO,EAAEwB,KAAK,CAACO,KAAN,CAAYzB,GAHhB;AAILL,MAAAA,aAAa,EAAEuB,KAAK,CAACvB,aAJhB;AAKLC,MAAAA,eAAe,EAAEsB,KAAK,CAACtB;AALlB,KAAP;AAOD;;AAQD8B,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,WAAL,CAAiB,OAAjB,EAA0B,OAA1B,CADH,EAEG,KAAKC,YAAL,CAAkB,SAAlB,EAA6B,OAA7B,EAAsC,KAAKtC,KAAL,CAAWM,MAAjD,CAFH,EAGG,KAAK+B,WAAL,CAAiB,eAAjB,EAAkC,iBAAlC,EAAqD,QAArD,CAHH,EAIG,KAAKA,WAAL,CAAiB,iBAAjB,EAAoC,MAApC,CAJH,EAKG,KAAKE,YAAL,CAAkB,MAAlB,CALH,CAFF,CADF;AAYD;;AApF0B;;AAuF7B,eAAexC,SAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\"\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\")\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n"]},"metadata":{},"sourceType":"module"}